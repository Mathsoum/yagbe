#include <cstdint>
#include <string>
#include <vector>

class Emulator {

    static constexpr std::uint8_t LD16_BC = 0x01;
    static constexpr std::uint8_t LD16_DE = 0x11;
    static constexpr std::uint8_t LD16_HL = 0x21;
    static constexpr std::uint8_t LD16_SP = 0x31;

    static constexpr std::uint8_t LD8_A = 0x3e;

    static constexpr std::uint8_t LDaBC_A = 0x02;
    static constexpr std::uint8_t LDaDE_A = 0x12;

    static constexpr std::uint8_t LDHLp = 0x22;
    static constexpr std::uint8_t LDHLm = 0x32;

    static constexpr std::uint8_t JPNZ_r8 = 0x20;

    static constexpr std::uint8_t XOR_A = 0xaf;

    static constexpr std::uint8_t CB_PREFIX = 0xcb;

    static constexpr std::uint8_t BIT7H = 0x7c;

    static constexpr std::array<std::uint8_t, 0x0100> _boot_rom = {
        0x31, 0xfe, 0xff, 0xaf, 0x21, 0xff, 0x9f, 0x32, 0xcb, 0x7c, 0x20, 0xfb, 0x21, 0x26, 0xff, 0x0e,
        0x11, 0x3e, 0x80, 0x32, 0xe2, 0x0c, 0x3e, 0xf3, 0xe2, 0x32, 0x3e, 0x77, 0x77, 0x3e, 0xfc, 0xe0,
        0x47, 0x11, 0x04, 0x01, 0x21, 0x10, 0x80, 0x1a, 0xcd, 0x95, 0x00, 0xcd, 0x96, 0x00, 0x13, 0x7b,
        0xfe, 0x34, 0x20, 0xf3, 0x11, 0xd8, 0x00, 0x06, 0x08, 0x1a, 0x13, 0x22, 0x23, 0x05, 0x20, 0xf9,
        0x3e, 0x19, 0xea, 0x10, 0x99, 0x21, 0x2f, 0x99, 0x0e, 0x0c, 0x3d, 0x28, 0x08, 0x32, 0x0d, 0x20,
        0xf9, 0x2e, 0x0f, 0x18, 0xf3, 0x67, 0x3e, 0x64, 0x57, 0xe0, 0x42, 0x3e, 0x91, 0xe0, 0x40, 0x04,
        0x1e, 0x02, 0x0e, 0x0c, 0xf0, 0x44, 0xfe, 0x90, 0x20, 0xfa, 0x0d, 0x20, 0xf7, 0x1d, 0x20, 0xf2,
        0x0e, 0x13, 0x24, 0x7c, 0x1e, 0x83, 0xfe, 0x62, 0x28, 0x06, 0x1e, 0xc1, 0xfe, 0x64, 0x20, 0x06,
        0x7b, 0xe2, 0x0c, 0x3e, 0x87, 0xe2, 0xf0, 0x42, 0x90, 0xe0, 0x42, 0x15, 0x20, 0xd2, 0x05, 0x20,
        0x4f, 0x16, 0x20, 0x18, 0xcb, 0x4f, 0x06, 0x04, 0xc5, 0xcb, 0x11, 0x17, 0xc1, 0xcb, 0x11, 0x17,
        0x05, 0x20, 0xf5, 0x22, 0x23, 0x22, 0x23, 0xc9, 0xce, 0xed, 0x66, 0x66, 0xcc, 0x0d, 0x00, 0x0b,
        0x03, 0x73, 0x00, 0x83, 0x00, 0x0c, 0x00, 0x0d, 0x00, 0x08, 0x11, 0x1f, 0x88, 0x89, 0x00, 0x0e,
        0xdc, 0xcc, 0x6e, 0xe6, 0xdd, 0xdd, 0xd9, 0x99, 0xbb, 0xbb, 0x67, 0x63, 0x6e, 0x0e, 0xec, 0xcc,
        0xdd, 0xdc, 0x99, 0x9f, 0xbb, 0xb9, 0x33, 0x3e, 0x3c, 0x42, 0xb9, 0xa5, 0xb9, 0xa5, 0x42, 0x3c,
        0x21, 0x04, 0x01, 0x11, 0xa8, 0x00, 0x1a, 0x13, 0xbe, 0x20, 0xfe, 0x23, 0x7d, 0xfe, 0x34, 0x20,
        0xf5, 0x06, 0x19, 0x78, 0x86, 0x23, 0x05, 0x20, 0xfb, 0x86, 0x20, 0xfe, 0x3e, 0x01, 0xe0, 0x50,
    };

    public:
        Emulator() : _memory(0xFFFF, 0x00) {}

        void loadROMFromFile(const std::string& filename);
        void runThis(const std::vector<std::uint8_t>& rom);

        void execute();

        const std::vector<std::uint8_t>& memory() const;

        std::uint16_t pc() const;
        std::uint16_t sp() const;

        std::uint8_t reg_a() const;
        std::uint8_t reg_b() const;
        std::uint8_t reg_c() const;
        std::uint8_t reg_d() const;
        std::uint8_t reg_e() const;
        std::uint8_t reg_h() const;
        std::uint8_t reg_l() const;
        std::uint8_t reg_flags() const;

        std::uint16_t reg_af() const;
        std::uint16_t reg_bc() const;
        std::uint16_t reg_de() const;
        std::uint16_t reg_hl() const;

        void set_reg_a(std::uint8_t value);
        void set_reg_b(std::uint8_t value);
        void set_reg_c(std::uint8_t value);
        void set_reg_d(std::uint8_t value);
        void set_reg_e(std::uint8_t value);
        void set_reg_h(std::uint8_t value);
        void set_reg_l(std::uint8_t value);
        void set_reg_flags(std::uint8_t value);

    private:
        std::uint16_t _pc = 0;
        std::uint16_t _sp = 0;

        std::vector<std::uint8_t> _memory;

        std::uint16_t _reg_af = 0;
        std::uint16_t _reg_bc = 0;
        std::uint16_t _reg_de = 0;
        std::uint16_t _reg_hl = 0;
};
